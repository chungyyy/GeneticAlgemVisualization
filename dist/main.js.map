{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/SA.js","webpack:///./src/LO.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","addEventListener","ctx","document","getElementById","getContext","ctx2","ctx3","maxDimension","totalCities","cities","populationNumber","populationArray","fitness","mutationRate","crossoverRate","numGenerations","shortestDistanceSoFar","Infinity","bestPoints","createRandomPoints","SA","SimulatedAnnealing","LO","LexicoGraphicOrdering","createRandomCities","ctxArr","length","fillStyle","globalAlpha","fillRect","j","beginPath","arc","x","y","Math","PI","fill","closePath","popArray","num","fromArr","shuffled","shuffle","push","populate","rand_x","random","rand_y","gaDraw","clearRect","populationArr","dist","calculateTotalDistance","sum","calculateFitness","currentDistance","slice","innerHTML","floor","moveTo","lineTo","strokeStyle","stroke","checkShortestDistance","newPopulationArray","firstParent","randomPick","secondParent","mutantChild","mutate","crossover","nextGeneration","toShuffle","a","myArr","b","array","hypot","index","limit","start","child","includes","stop","clearInterval","GA","SAnn","LOnn","setInterval","saSolve","this","loSolve","defaultSettings","shortestDistance","startTemperature","stopTemperature","dropTemperatureProbability","swap","saDraw","arr","totalDistance","copy","cityA","cityB","swappedCities","oldRouteCost","newRouteCost","cost","exp","order","orderFunc","iterationNum","nextOrder","orderedArr","factorial","Number","toFixed","orderedArray","largestX","citiesArr","largestY","splicedSuffix","splice","concat","reverse","result"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import SimulatedAnnealing from './SA';\nimport LexicoGraphicOrdering from './LO';\n\nwindow.addEventListener(\"DOMContentLoaded\", ()=>{\n  const canvas = document.getElementById(\"myCanvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const canvas2 = document.getElementById(\"myCanvasTwo\");\n  const ctx2 = canvas2.getContext(\"2d\");\n  \n  const canvas3 = document.getElementById(\"myCanvasThree\");\n  const ctx3 = canvas3.getContext(\"2d\");\n  \n  const maxDimension = 400;\n  \n  const totalCities = 7;\n  let cities = [];\n  \n  const populationNumber = 500;\n  let populationArray = [];\n  let fitness = [];\n  let mutationRate = .3;\n  let crossoverRate = 1;\n  let numGenerations = 0;\n  \n  let shortestDistanceSoFar = Infinity;\n  let bestPoints = [];\n  \n  createRandomPoints(totalCities, maxDimension, ctx, ctx2, ctx3);\n  let SA = new SimulatedAnnealing(ctx2, cities);\n  let LO = new LexicoGraphicOrdering(ctx3, cities);\n  \n  function createRandomPoints(totalCities, maxDimension, ...ctxArr) {\n    createRandomCities(totalCities);\n    \n    for (let i = 0; i < ctxArr.length; i++) {\n      ctxArr[i].fillStyle = \"black\";\n      ctxArr[i].globalAlpha = 0.2;\n      ctxArr[i].fillRect(0, 0, maxDimension, maxDimension);\n      \n      for (let j = 0; j < cities.length; j++) {\n        ctxArr[i].beginPath();\n        let radius = 3;\n        ctxArr[i].arc(cities[j].x, cities[j].y, radius, 0, 2 * Math.PI);\n        ctxArr[i].fillStyle = \"black\";\n        ctxArr[i].fill();\n        ctxArr[i].closePath();\n      };\n    }\n\n    populate(populationArray, populationNumber, cities);\n  };\n\n  function createRandomCities(totalCities) {\n    for (let i = 0; i < totalCities; i++) {\n      let rand_x = Math.random(i) * maxDimension;\n      let rand_y = Math.random(i) * maxDimension;\n      cities[i] = {\n        x: rand_x,\n        y: rand_y,\n      };\n    };\n  }\n\n\n  function populate(popArray, num, fromArr) {\n    for (let i = 0; i < num; i++) {\n      let shuffled = shuffle(fromArr);\n      popArray.push(shuffled);\n    };\n\n    return popArray;\n  };\n\n  function gaDraw() {\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    ctx.fillStyle = \"black\";\n    ctx.globalAlpha = 0.2;\n    ctx.fillRect(0, 0, maxDimension, maxDimension);\n    for (let i = 0; i < totalCities; i++) {\n      ctx.beginPath();\n      let x = cities[i].x;\n      let y = cities[i].y;\n      let radius = 3;\n      ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.closePath();\n    };\n    cities = shuffle(cities);\n\n    calculateFitness(populationArray);\n    checkShortestDistance(populationArray);\n    nextGeneration();\n    numGenerations += 1;\n    document.getElementById(\"ga-generation\").innerHTML = `Generations: ${numGenerations}`;\n  };\n\n  function shuffle(toShuffle) {\n    let a = toShuffle.length;\n    let myArr = toShuffle.slice();\n    while (a) {\n      let b = Math.floor(Math.random() * a--);\n      [myArr[a], myArr[b]] = [myArr[b], myArr[a]];\n    };\n    return myArr;\n  };\n\n  function checkShortestDistance(populationArr) {\n\n    // genetic algorithm\n    for (let i = 0; i < populationArr.length; i++) {\n      let currentDistance = calculateTotalDistance(populationArr[i]);\n  \n      if (shortestDistanceSoFar > currentDistance) {\n        shortestDistanceSoFar = currentDistance;\n        bestPoints = populationArr[i].slice();\n        document.getElementById(\"ga-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(shortestDistanceSoFar)}`;\n      };\n    }\n\n    \n    ctx.beginPath();\n    for (let i = 0; i < bestPoints.length - 1; i++) {\n      ctx.moveTo(bestPoints[i].x, bestPoints[i].y);\n      ctx.lineTo(bestPoints[i + 1].x, bestPoints[i + 1].y);\n      ctx.closePath();\n    };\n    ctx.strokeStyle = \"#111e6c\";\n    ctx.stroke();\n\n  };\n\n  function calculateTotalDistance(array) {\n    let sum = 0;\n    for (let i = 0; i < array.length - 1; i++) {\n      let a = array[i].x - array[i + 1].x;\n      let b = array[i].y - array[i + 1].y;\n      let distance = Math.hypot(a, b);\n      sum += distance;\n    };\n\n    return sum;\n  };\n\n  function calculateFitness(populationArr) {\n    for (let i = 0; i < populationArr.length; i++) {\n      let dist = calculateTotalDistance(populationArr[i]);\n      fitness[i] = 1 / dist;\n    };\n\n    let sum = 0;\n    for (let i = 0; i < fitness.length; i++) {\n      sum += fitness[i];\n    };\n\n    for (let i = 0; i < fitness.length; i++) {\n      fitness[i] = fitness[i] / sum;\n    };\n  };\n\n  function randomPick() {\n    let index = 0;\n    let i = Math.random();\n\n    while (i > 0) {\n      i -= fitness[index];\n\n      if (i > 0) {\n        index += 1;\n      };\n    };\n\n    return populationArray[index];\n  };\n\n  function nextGeneration() {\n    let newPopulationArray = [];\n\n    for (let i = 0; i < populationArray.length; i++) {\n      let firstParent = randomPick();\n      let secondParent = randomPick();\n      let childRoute = crossover(firstParent, secondParent, crossoverRate);\n      let mutantChild = mutate(childRoute, mutationRate);\n      newPopulationArray[i] = mutantChild;\n    };\n    populationArray = newPopulationArray;\n  };\n\n  function mutate(array, mutationRate) {\n    if (Math.random() <= mutationRate) {\n      return shuffle(array);\n    };\n\n    return array;\n  };\n\n  function crossover(firstParent, secondParent, crossoverRate) {\n    if (Math.random() <= crossoverRate) {\n\n      let limit = Math.floor(firstParent.length) + 1;\n      let start = Math.floor(Math.random() * limit);\n      let child = firstParent.slice(start, limit);\n\n      for (let i = 0; i < secondParent.length; i++) {\n        if (!child.includes(secondParent[i])) {\n          child.push(secondParent[i]);\n        };\n      };\n      return child;\n    };\n    return firstParent;\n  };\n\n\n\n  //buttons: buttons: buttons: buttons: buttons: \n\n  function start() {\n    if (!window.GA) {\n      window.GA = setInterval(gaDraw, 10);\n    };\n    if (!window.SAnn) {\n      window.SAnn = setInterval(SA.saSolve.bind(this), 10);\n    };\n    if (!window.LOnn) {\n      window.LOnn = setInterval(LO.loSolve.bind(this), 10);\n    };\n  };\n\n  function stop() {\n    clearInterval(window.GA);\n    window.GA = null;\n    clearInterval(window.SAnn);\n    window.SAnn = null;\n    clearInterval(window.LOnn);\n    window.LOnn = null;\n  };\n\n  function remap() {\n    stop();\n    cities = [];\n    shortestDistanceSoFar = Infinity;\n    bestPoints = [];\n    populationArray = [];\n    numGenerations = 0;\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    SA.defaultSettings();\n    ctx3.clearRect(0, 0, maxDimension, maxDimension);\n    createRandomPoints(totalCities, maxDimension, ctx, ctx2, ctx3);\n    SA = new SimulatedAnnealing(ctx2, cities);\n    LO = new LexicoGraphicOrdering(ctx3, cities);\n\n    document.getElementById(\"ga-generation\").innerHTML = \"Generations: 0\";\n    document.getElementById(\"sa-temp\").innerHTML = \"Temperature: 0\";\n    document.getElementById(\"ga-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"sa-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"brute-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"percentComplete\").innerHTML = \"Percent Complete: 0.00%\";\n  }\n\n  const play = document.getElementById(\"play\");\n  play.addEventListener(\"click\", start);\n\n  const pause = document.getElementById(\"pause\");\n  pause.addEventListener(\"click\", stop);\n\n  const reset = document.getElementById(\"reset\");\n  reset.addEventListener(\"click\", remap)\n});\n","export default class SimulatedAnnealing {\n  constructor(ctx, cities) {\n    this.ctx = ctx;\n    this.cities = cities;\n    this.shortestDistance = Infinity;\n    this.bestPoints = [];\n    this.startTemperature = 100;\n    this.stopTemperature = .001;\n    this.dropTemperatureProbability = .998;\n    this.saSolve = this.saSolve.bind(this);\n    this.calculateTotalDistance = this.calculateTotalDistance.bind(this);\n    this.swap = this.swap.bind(this);\n    this.saDraw = this.saDraw.bind(this);\n  }\n\n  defaultSettings() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.shortestDistance = Infinity;\n    this.bestPoints = [];\n    this.startTemperature = 100;\n    this.stopTemperature = .001;\n    this.dropTemperatureProbability = .998;\n  }\n\n  calculateTotalDistance(arr) {\n    let totalDistance = 0;\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let a = arr[i].x - arr[i + 1].x;\n      let b = arr[i].y - arr[i + 1].y;\n      let distance = Math.hypot(a, b);\n      totalDistance += distance;\n    };\n\n    return totalDistance;\n  };\n\n  swap() {\n    let copy = this.cities.slice();\n    let limit = copy.length;\n    let cityA = Math.floor(Math.random() * limit);\n    let cityB = Math.floor(Math.random() * limit);\n    [copy[cityA], copy[cityB]] = [copy[cityB], copy[cityA]];\n    return copy;\n  }\n\n  saDraw() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.globalAlpha = 0.2;\n    this.ctx.fillRect(0, 0, 400, 400);\n    for (let i = 0; i < this.cities.length; i++) {\n      this.ctx.beginPath();\n      let x = this.cities[i].x;\n      let y = this.cities[i].y;\n      let radius = 3;\n      this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fill();\n      this.ctx.closePath();\n    };\n\n    this.ctx.beginPath();\n    for (let i = 0; i < this.bestPoints.length - 1; i++) {\n      this.ctx.moveTo(this.bestPoints[i].x, this.bestPoints[i].y);\n      this.ctx.lineTo(this.bestPoints[i + 1].x, this.bestPoints[i + 1].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"#111e6c\";\n    this.ctx.stroke();\n  }\n\n  saSolve() {\n\n    if (this.startTemperature > this.stopTemperature) {\n      let swappedCities = this.swap();\n      let oldRouteCost = this.calculateTotalDistance(this.cities);\n      let newRouteCost = this.calculateTotalDistance(swappedCities);\n      let cost = newRouteCost - oldRouteCost;\n      if (cost < 0 || (Math.random() <= Math.exp((0 - cost) / this.startTemperature))) {\n        this.cities = swappedCities;\n        this.bestPoints = swappedCities;\n        this.shortestDistance = newRouteCost;\n        document.getElementById(\"sa-temp\").innerHTML = `Temperature: ${Math.floor(this.startTemperature)}`;\n        document.getElementById(\"sa-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(this.shortestDistance)}`;\n      }\n    }\n    this.startTemperature *= this.dropTemperatureProbability;\n    this.saDraw();\n  }\n\n};","export default class LexicoGraphicOrdering {\n  constructor(ctx, cities) {\n    this.ctx = ctx;\n    this.cities = cities\n    this.order = this.orderFunc(cities);\n    this.shortestDistance = Infinity;\n    this.bestPoints = cities;\n    this.iterationNum = 0;\n    this.nextOrder = this.nextOrder.bind(this);\n    this.calculateTotalDistance = this.calculateTotalDistance.bind(this);\n    this.orderFunc = this.orderFunc.bind(this);\n    this.loSolve = this.loSolve.bind(this);\n  }\n\n  orderFunc(cities) {\n    let orderedArr = [];\n    for (let i = 0; i < cities.length; i++) {\n      orderedArr[i] = i;\n    }\n\n    return orderedArr;\n  }\n\n  calculateTotalDistance(arr) {\n    let totalDistance = 0;\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let a = arr[i].x - arr[i + 1].x;\n      let b = arr[i].y - arr[i + 1].y;\n      let distance = Math.hypot(a, b);\n      totalDistance += distance;\n    };\n\n    if (this.shortestDistance > totalDistance) {\n      this.shortestDistance = totalDistance;\n      this.bestPoints = arr;\n    }\n\n    return totalDistance;\n  };\n\n  loSolve() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.globalAlpha = 0.2;\n    this.ctx.fillRect(0, 0, 400, 400);\n    for (let i = 0; i < this.cities.length; i++) {\n      this.ctx.beginPath();\n      let x = this.cities[this.order[i]].x;\n      let y = this.cities[this.order[i]].y;\n      let radius = 3;\n      this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fill();\n      this.ctx.closePath();\n    };\n\n    this.ctx.beginPath();\n    for (let i = 0; i < this.order.length - 1; i++) {\n      this.ctx.moveTo(this.cities[this.order[i]].x, this.cities[this.order[i]].y);\n      this.ctx.lineTo(this.cities[this.order[i + 1]].x, this.cities[this.order[i + 1]].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"#111e6c\";\n    this.ctx.stroke();\n\n    this.calculateTotalDistance(this.cities);\n\n    this.ctx.beginPath();\n    for (let i = 0; i < this.bestPoints.length - 1; i++) {\n      this.ctx.moveTo(this.bestPoints[i].x, this.bestPoints[i].y);\n      this.ctx.lineTo(this.bestPoints[i + 1].x, this.bestPoints[i + 1].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"red\";\n    this.ctx.stroke();\n\n    if (Math.floor((this.iterationNum / this.factorial(this.cities.length)) * 100) < 100) {\n      this.iterationNum += 1;\n    }\n    this.nextOrder(this.order);\n    document.getElementById(\"percentComplete\").innerHTML = `Percent Complete: ${Number(this.iterationNum / this.factorial(this.cities.length) * 100).toFixed(2)}%`;\n    document.getElementById(\"brute-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(this.shortestDistance)}`;\n  }\n\n  nextOrder(orderedArray) {\n    let largestX = Infinity;\n    let citiesArr = this.cities.slice();\n    for (let i = 0; i < orderedArray.length - 1; i++) {\n      if (orderedArray[i] < orderedArray[i + 1]) {\n        largestX = i;\n      }\n    }\n\n    let largestY = Infinity;\n    for (let j = 0; j < orderedArray.length; j++) {\n      if (orderedArray[largestX] < orderedArray[j]) {\n        largestY = j;\n      }\n    }\n\n    [orderedArray[largestX], orderedArray[largestY]] = [orderedArray[largestY], orderedArray[largestX]];\n    [citiesArr[largestX], citiesArr[largestY]] = [citiesArr[largestY], citiesArr[largestX]];\n\n    let splicedSuffix = orderedArray.splice(largestX + 1);\n    orderedArray = orderedArray.concat(splicedSuffix.reverse());\n    this.order = orderedArray;\n    this.cities = citiesArr;\n  }\n\n  factorial(num) {\n    let result = 1;\n    for (let i = 1; i <= num; i++) {\n      result *= i;\n    }\n\n    return result;\n  }\n\n}"],"sourceRoot":""}