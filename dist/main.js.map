{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","addEventListener","ctx","document","getElementById","getContext","maxDimension","totalCities","cities","populationNumber","populationArray","fitness","mutationRate","crossoverRate","shortestDistanceSoFar","Infinity","bestPoints","createRandomPoints","fillStyle","globalAlpha","fillRect","beginPath","rand_x","Math","random","rand_y","arc","PI","x","y","fill","closePath","popArray","num","fromArr","shuffled","shuffle","push","populate","redraw","clearRect","populationArr","length","dist","calculateTotalDistance","sum","calculateFitness","currentDistance","slice","console","log","moveTo","lineTo","strokeStyle","stroke","checkShortestDistance","newPopulationArray","firstParent","randomPick","secondParent","mutantChild","mutate","crossover","nextGeneration","toShuffle","a","myArr","b","floor","array","hypot","index","limit","start","child","includes","stop","clearInterval","intervalId","setInterval"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","window.addEventListener(\"DOMContentLoaded\", ()=>{\n  const canvas = document.getElementById(\"myCanvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const canvas2 = document.getElementById(\"myCanvasTwo\");\n  const ctx2 = canvas2.getContext(\"2d\");\n  const maxDimension = 400;\n\n  const totalCities = 10;\n  let cities = [];\n\n  const populationNumber = 500;\n  let populationArray = [];\n  let fitness = [];\n  let mutationRate = .3;\n  let crossoverRate = 1;\n\n  let shortestDistanceSoFar = Infinity;\n  let bestPoints = [];\n\n  createRandomPoints(totalCities, maxDimension);\n\n  function createRandomPoints(totalCities, maxDimension) {\n    ctx.fillStyle = \"black\";\n    ctx.globalAlpha = 0.2;\n    ctx.fillRect(0, 0, maxDimension, maxDimension);\n\n    for (let i = 0; i < totalCities; i++) {\n      ctx.beginPath();\n      let rand_x = Math.random(i) * maxDimension;\n      let rand_y = Math.random(i) * maxDimension;\n      let radius = 3;\n      ctx.arc(rand_x, rand_y, radius, 0, 2 * Math.PI);\n      cities[i] = {\n        x: rand_x,\n        y: rand_y,\n      };\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    populate(populationArray, populationNumber, cities);\n  };\n\n  function populate(popArray, num, fromArr) {\n    for (let i = 0; i < num; i++) {\n      let shuffled = shuffle(fromArr);\n      popArray.push(shuffled);\n    };\n\n    return popArray;\n  };\n\n  function redraw() {\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    ctx.fillStyle = \"black\";\n    ctx.globalAlpha = 0.2;\n    ctx.fillRect(0, 0, maxDimension, maxDimension);\n    for (let i = 0; i < totalCities; i++) {\n      ctx.beginPath();\n      let rand_x = cities[i].x;\n      let rand_y = cities[i].y;\n      let radius = 3;\n      ctx.arc(rand_x, rand_y, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.closePath();\n    };\n    cities = shuffle(cities);\n\n    calculateFitness(populationArray);\n    checkShortestDistance(populationArray);\n    nextGeneration();\n    console.log(\"generations\");\n  };\n\n  function shuffle(toShuffle) {\n    let a = toShuffle.length;\n    let myArr = toShuffle.slice();\n    while (a) {\n      let b = Math.floor(Math.random() * a--);\n      [myArr[a], myArr[b]] = [myArr[b], myArr[a]];\n    };\n    return myArr;\n  };\n\n  function checkShortestDistance(populationArr) {\n\n    // genetic algorithm\n    for (let i = 0; i < populationArr.length; i++) {\n      let currentDistance = calculateTotalDistance(populationArr[i]);\n  \n      if (shortestDistanceSoFar > currentDistance) {\n        shortestDistanceSoFar = currentDistance;\n        bestPoints = populationArr[i].slice();\n        console.log(`shortest distance so far: ${shortestDistanceSoFar}`);\n        console.log(bestPoints);\n      };\n    }\n\n    for (let i = 0; i < bestPoints.length - 1; i++) {\n      ctx.beginPath();\n      ctx.moveTo(bestPoints[i].x, bestPoints[i].y);\n      ctx.lineTo(bestPoints[i + 1].x, bestPoints[i + 1].y);\n      ctx.closePath();\n      ctx.strokeStyle = \"#111e6c\";\n      ctx.stroke();\n    };\n  };\n\n  function calculateTotalDistance(array) {\n    let sum = 0;\n    for (let i = 0; i < array.length - 1; i++) {\n      let a = array[i].x - array[i + 1].x;\n      let b = array[i].y - array[i + 1].y;\n      let distance = Math.hypot(a, b);\n      sum += distance;\n    };\n\n    return sum;\n  };\n\n  function calculateFitness(populationArr) {\n    for (let i = 0; i < populationArr.length; i++) {\n      let dist = calculateTotalDistance(populationArr[i]);\n      fitness[i] = 1 / dist;\n    };\n\n    let sum = 0;\n    for (let i = 0; i < fitness.length; i++) {\n      sum += fitness[i];\n    };\n\n    for (let i = 0; i < fitness.length; i++) {\n      fitness[i] = fitness[i] / sum;\n    };\n  };\n\n  function randomPick() {\n    let index = 0;\n    let i = Math.random();\n\n    while (i > 0) {\n      i -= fitness[index];\n\n      if (i > 0) {\n        index += 1;\n      };\n    };\n\n    return populationArray[index];\n  };\n\n  function nextGeneration() {\n    let newPopulationArray = [];\n\n    for (let i = 0; i < populationArray.length; i++) {\n      let firstParent = randomPick();\n      let secondParent = randomPick();\n      let childRoute = crossover(firstParent, secondParent, crossoverRate);\n      let mutantChild = mutate(childRoute, mutationRate);\n      newPopulationArray[i] = mutantChild;\n    };\n    populationArray = newPopulationArray;\n  };\n\n  function mutate(array, mutationRate) {\n    if (Math.random() <= mutationRate) {\n      return shuffle(array);\n    };\n\n    return array;\n  };\n\n  function crossover(firstParent, secondParent, crossoverRate) {\n    if (Math.random() <= crossoverRate) {\n\n      let limit = Math.floor(firstParent.length) + 1;\n      let start = Math.floor(Math.random() * limit);\n      let child = firstParent.slice(start, limit);\n\n      for (let i = 0; i < secondParent.length; i++) {\n        if (!child.includes(secondParent[i])) {\n          child.push(secondParent[i]);\n        };\n      };\n      return child;\n    };\n    return firstParent;\n  };\n\n\n\n  //buttons: buttons: buttons: buttons: buttons: \n\n  function start() {\n    if (!window.intervalId) {\n      window.intervalId = setInterval(redraw, 1000/60);\n    };\n  };\n\n  function stop() {\n    clearInterval(window.intervalId);\n    window.intervalId = null;\n  };\n\n  function remap() {\n    stop();\n    cities = [];\n    shortestDistanceSoFar = Infinity;\n    bestPoints = [];\n    populationArray = [];\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    createRandomPoints(totalCities, maxDimension);\n  }\n\n  const play = document.getElementById(\"play\");\n  play.addEventListener(\"click\", start);\n\n  const pause = document.getElementById(\"pause\");\n  pause.addEventListener(\"click\", stop);\n\n  const reset = document.getElementById(\"reset\");\n  reset.addEventListener(\"click\", remap)\n});\n"],"sourceRoot":""}