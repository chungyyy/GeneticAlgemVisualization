{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/SA.js","webpack:///./src/LO.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","addEventListener","ctx","document","getElementById","getContext","ctx2","ctx3","maxDimension","totalCities","cities","populationNumber","populationArray","fitness","mutationRate","crossoverRate","numGenerations","shortestDistanceSoFar","Infinity","bestPoints","range","label","innerHTML","remap","createRandomPoints","SA","SimulatedAnnealing","LO","LexicoGraphicOrdering","createRandomCities","ctxArr","length","fillStyle","globalAlpha","fillRect","j","beginPath","arc","x","y","Math","PI","fill","closePath","popArray","num","fromArr","shuffled","shuffle","push","populate","rand_x","random","rand_y","gaDraw","clearRect","populationArr","dist","calculateTotalDistance","sum","calculateFitness","currentDistance","slice","floor","moveTo","lineTo","strokeStyle","stroke","checkShortestDistance","newPopulationArray","firstParent","randomPick","secondParent","mutantChild","mutate","crossover","nextGeneration","toShuffle","a","myArr","b","array","hypot","index","limit","start","child","includes","stop","clearInterval","GA","SAnn","LOnn","defaultSettings","setInterval","saSolve","this","loSolve","shortestDistance","startTemperature","stopTemperature","dropTemperatureProbability","swap","saDraw","arr","totalDistance","copy","cityA","cityB","swappedCities","oldRouteCost","newRouteCost","cost","exp","fixedCities","order","orderFunc","iterationNum","nextOrder","orderedArr","factorial","Number","toFixed","console","log","orderedArray","largestX","citiesArr","largestY","splicedSuffix","splice","concat","reverse","result"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import SimulatedAnnealing from './SA';\nimport LexicoGraphicOrdering from './LO';\n\nwindow.addEventListener(\"DOMContentLoaded\", ()=>{\n  const canvas = document.getElementById(\"myCanvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const canvas2 = document.getElementById(\"myCanvasTwo\");\n  const ctx2 = canvas2.getContext(\"2d\");\n  \n  const canvas3 = document.getElementById(\"myCanvasThree\");\n  const ctx3 = canvas3.getContext(\"2d\");\n  \n  const maxDimension = 400;\n  \n  let totalCities = 8;\n  let cities = [];\n  \n  const populationNumber = 500;\n  let populationArray = [];\n  let fitness = [];\n  let mutationRate = .05;\n  let crossoverRate = .3;\n  let numGenerations = 0;\n  \n  let shortestDistanceSoFar = Infinity;\n  let bestPoints = [];\n\n  let range = document.getElementById(\"cities-setter\");\n  let label = document.getElementById(\"city-num\");\n  range.addEventListener('change', changeTotalCities);\n\n  function changeTotalCities() {\n    totalCities = range.value;\n    label.innerHTML = `Number of Cities: ${totalCities}`;\n    remap();\n  }\n\n  createRandomPoints(totalCities, maxDimension, ctx, ctx2, ctx3);\n  let SA = new SimulatedAnnealing(ctx2, cities);\n  let LO = new LexicoGraphicOrdering(ctx3, cities);\n  \n  function createRandomPoints(totalCities, maxDimension, ...ctxArr) {\n    createRandomCities(totalCities);\n    \n    for (let i = 0; i < ctxArr.length; i++) {\n      ctxArr[i].fillStyle = \"black\";\n      ctxArr[i].globalAlpha = 0.2;\n      ctxArr[i].fillRect(0, 0, maxDimension, maxDimension);\n      \n      for (let j = 0; j < cities.length; j++) {\n        ctxArr[i].beginPath();\n        let radius = 3;\n        ctxArr[i].arc(cities[j].x, cities[j].y, radius, 0, 2 * Math.PI);\n        ctxArr[i].fillStyle = \"black\";\n        ctxArr[i].fill();\n        ctxArr[i].closePath();\n      };\n    }\n\n    populate(populationArray, populationNumber, cities);\n  };\n\n  function createRandomCities(totalCities) {\n    for (let i = 0; i < totalCities; i++) {\n      let rand_x = Math.random(i) * maxDimension;\n      let rand_y = Math.random(i) * maxDimension;\n      cities[i] = {\n        x: rand_x,\n        y: rand_y,\n      };\n    };\n  }\n\n\n  function populate(popArray, num, fromArr) {\n    for (let i = 0; i < num; i++) {\n      let shuffled = shuffle(fromArr);\n      popArray.push(shuffled);\n    };\n\n    return popArray;\n  };\n\n  function gaDraw() {\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    ctx.fillStyle = \"black\";\n    ctx.globalAlpha = 0.2;\n    ctx.fillRect(0, 0, maxDimension, maxDimension);\n    for (let i = 0; i < totalCities; i++) {\n      ctx.beginPath();\n      let x = cities[i].x;\n      let y = cities[i].y;\n      let radius = 3;\n      ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.closePath();\n    };\n    cities = shuffle(cities);\n\n    calculateFitness(populationArray);\n    checkShortestDistance(populationArray);\n    nextGeneration();\n    numGenerations += 1;\n    document.getElementById(\"ga-generation\").innerHTML = `Generations: ${numGenerations}`;\n  };\n\n  function shuffle(toShuffle) {\n    let a = toShuffle.length;\n    let myArr = toShuffle.slice();\n    while (a) {\n      let b = Math.floor(Math.random() * a--);\n      [myArr[a], myArr[b]] = [myArr[b], myArr[a]];\n    };\n    return myArr;\n  };\n\n  function checkShortestDistance(populationArr) {\n    for (let i = 0; i < populationArr.length; i++) {\n      let currentDistance = calculateTotalDistance(populationArr[i]);\n  \n      if (shortestDistanceSoFar > currentDistance) {\n        shortestDistanceSoFar = currentDistance;\n        bestPoints = populationArr[i].slice();\n        document.getElementById(\"ga-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(shortestDistanceSoFar)}`;\n      };\n    }\n\n    \n    ctx.beginPath();\n    for (let i = 0; i < bestPoints.length - 1; i++) {\n      ctx.moveTo(bestPoints[i].x, bestPoints[i].y);\n      ctx.lineTo(bestPoints[i + 1].x, bestPoints[i + 1].y);\n      ctx.closePath();\n    };\n    ctx.strokeStyle = \"#111e6c\";\n    ctx.stroke();\n\n  };\n\n  function calculateTotalDistance(array) {\n    let sum = 0;\n    for (let i = 0; i < array.length - 1; i++) {\n      let a = array[i].x - array[i + 1].x;\n      let b = array[i].y - array[i + 1].y;\n      let distance = Math.hypot(a, b);\n      sum += distance;\n    };\n\n    return sum;\n  };\n\n  function calculateFitness(populationArr) {\n    for (let i = 0; i < populationArr.length; i++) {\n      let dist = calculateTotalDistance(populationArr[i]);\n      fitness[i] = 1 / dist;\n    };\n\n    let sum = 0;\n    for (let i = 0; i < fitness.length; i++) {\n      sum += fitness[i];\n    };\n\n    for (let i = 0; i < fitness.length; i++) {\n      fitness[i] = fitness[i] / sum;\n    };\n  };\n\n  function randomPick() {\n    let index = 0;\n    let i = Math.random();\n\n    while (i > 0) {\n      i -= fitness[index];\n\n      if (i > 0) {\n        index += 1;\n      };\n    };\n\n    return populationArray[index];\n  };\n\n  function nextGeneration() {\n    let newPopulationArray = [];\n\n    for (let i = 0; i < populationArray.length; i++) {\n      let firstParent = randomPick();\n      let secondParent = randomPick();\n      let childRoute = crossover(firstParent, secondParent, crossoverRate);\n      let mutantChild = mutate(childRoute, mutationRate);\n      newPopulationArray[i] = mutantChild;\n    };\n    populationArray = newPopulationArray;\n  };\n\n  function mutate(array, mutationRate) {\n    if (Math.random() <= mutationRate) {\n      return shuffle(array);\n    };\n\n    return array;\n  };\n\n  function crossover(firstParent, secondParent, crossoverRate) {\n    if (Math.random() <= crossoverRate) {\n\n      let limit = Math.floor(firstParent.length) + 1;\n      let start = Math.floor(Math.random() * limit);\n      let child = firstParent.slice(start, limit);\n\n      for (let i = 0; i < secondParent.length; i++) {\n        if (!child.includes(secondParent[i])) {\n          child.push(secondParent[i]);\n        };\n      };\n      return child;\n    };\n    return firstParent;\n  };\n\n\n\n  //buttons: buttons: buttons: buttons: buttons: \n\n  function start() {\n    if (!window.GA) {\n      window.GA = setInterval(gaDraw, 0);\n    };\n    if (!window.SAnn) {\n      window.SAnn = setInterval(SA.saSolve.bind(this), 0);\n    };\n    if (!window.LOnn) {\n      window.LOnn = setInterval(LO.loSolve.bind(this), 0);\n    };\n  };\n\n  function stop() {\n    clearInterval(window.GA);\n    window.GA = null;\n    clearInterval(window.SAnn);\n    window.SAnn = null;\n    clearInterval(window.LOnn);\n    window.LOnn = null;\n  };\n\n  function remap() {\n    stop();\n    cities = [];\n    shortestDistanceSoFar = Infinity;\n    bestPoints = [];\n    populationArray = [];\n    numGenerations = 0;\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    SA.defaultSettings();\n    ctx3.clearRect(0, 0, maxDimension, maxDimension);\n    createRandomPoints(totalCities, maxDimension, ctx, ctx2, ctx3);\n    SA = new SimulatedAnnealing(ctx2, cities);\n    LO = new LexicoGraphicOrdering(ctx3, cities);\n\n    document.getElementById(\"ga-generation\").innerHTML = \"Generations: 0\";\n    document.getElementById(\"sa-temp\").innerHTML = \"Temperature: 0\";\n    document.getElementById(\"ga-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"sa-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"brute-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"percentComplete\").innerHTML = \"Percent Complete: 0.00%\";\n  }\n\n  const play = document.getElementById(\"play\");\n  play.addEventListener(\"click\", start);\n\n  const pause = document.getElementById(\"pause\");\n  pause.addEventListener(\"click\", stop);\n\n  const reset = document.getElementById(\"reset\");\n  reset.addEventListener(\"click\", remap)\n});\n","export default class SimulatedAnnealing {\n  constructor(ctx, cities) {\n    this.ctx = ctx;\n    this.cities = cities;\n    this.shortestDistance = Infinity;\n    this.bestPoints = [];\n    this.startTemperature = 100;\n    this.stopTemperature = .001;\n    this.dropTemperatureProbability = .998;\n    this.saSolve = this.saSolve.bind(this);\n    this.calculateTotalDistance = this.calculateTotalDistance.bind(this);\n    this.swap = this.swap.bind(this);\n    this.saDraw = this.saDraw.bind(this);\n  }\n\n  defaultSettings() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.shortestDistance = Infinity;\n    this.bestPoints = [];\n    this.startTemperature = 100;\n    this.stopTemperature = .001;\n    this.dropTemperatureProbability = .998;\n  }\n\n  calculateTotalDistance(arr) {\n    let totalDistance = 0;\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let a = arr[i].x - arr[i + 1].x;\n      let b = arr[i].y - arr[i + 1].y;\n      let distance = Math.hypot(a, b);\n      totalDistance += distance;\n    };\n\n    return totalDistance;\n  };\n\n  swap() {\n    let copy = this.cities.slice();\n    let limit = copy.length;\n    let cityA = Math.floor(Math.random() * limit);\n    let cityB = Math.floor(Math.random() * limit);\n    [copy[cityA], copy[cityB]] = [copy[cityB], copy[cityA]];\n    return copy;\n  }\n\n  saDraw() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.globalAlpha = 0.2;\n    this.ctx.fillRect(0, 0, 400, 400);\n    for (let i = 0; i < this.cities.length; i++) {\n      this.ctx.beginPath();\n      let x = this.cities[i].x;\n      let y = this.cities[i].y;\n      let radius = 3;\n      this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fill();\n      this.ctx.closePath();\n    };\n\n    this.ctx.beginPath();\n    for (let i = 0; i < this.bestPoints.length - 1; i++) {\n      this.ctx.moveTo(this.bestPoints[i].x, this.bestPoints[i].y);\n      this.ctx.lineTo(this.bestPoints[i + 1].x, this.bestPoints[i + 1].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"#111e6c\";\n    this.ctx.stroke();\n  }\n\n  saSolve() {\n\n    if (this.startTemperature > this.stopTemperature) {\n      let swappedCities = this.swap();\n      let oldRouteCost = this.calculateTotalDistance(this.cities);\n      let newRouteCost = this.calculateTotalDistance(swappedCities);\n      let cost = newRouteCost - oldRouteCost;\n      if (cost < 0 || (Math.random() <= Math.exp((0 - cost) / this.startTemperature))) {\n        this.cities = swappedCities;\n        if (this.shortestDistance >= newRouteCost) {\n          this.shortestDistance = newRouteCost;\n          this.bestPoints = swappedCities;\n        }\n        document.getElementById(\"sa-temp\").innerHTML = `Temperature: ${Math.floor(this.startTemperature)}`;\n        document.getElementById(\"sa-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(this.shortestDistance)}`;\n      }\n    }\n    this.startTemperature *= this.dropTemperatureProbability;\n    this.saDraw();\n  }\n\n};","export default class LexicoGraphicOrdering {\n  constructor(ctx, cities) {\n    this.ctx = ctx;\n    this.cities = cities;\n    this.fixedCities = cities;\n    this.order = this.orderFunc(cities);\n    this.shortestDistance = this.calculateTotalDistance(cities);\n    this.bestPoints = cities;\n    this.iterationNum = 0;\n    this.nextOrder = this.nextOrder.bind(this);\n    this.calculateTotalDistance = this.calculateTotalDistance.bind(this);\n    this.orderFunc = this.orderFunc.bind(this);\n    this.loSolve = this.loSolve.bind(this);\n  }\n\n  orderFunc(cities) {\n    let orderedArr = [];\n    for (let i = 0; i < cities.length; i++) {\n      orderedArr[i] = i;\n    }\n\n    return orderedArr;\n  }\n\n  calculateTotalDistance(arr) {\n    let totalDistance = 0;\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let a = arr[i].x - arr[i + 1].x;\n      let b = arr[i].y - arr[i + 1].y;\n      let distance = Math.hypot(a, b);\n      totalDistance += distance;\n    };\n\n    return totalDistance;\n  };\n\n  loSolve() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.globalAlpha = 0.2;\n    this.ctx.fillRect(0, 0, 400, 400);\n\n    for (let i = 0; i < this.cities.length; i++) {\n      this.ctx.beginPath();\n      let x = this.cities[this.order[i]].x;\n      let y = this.cities[this.order[i]].y;\n      let radius = 3;\n      this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fill();\n      this.ctx.closePath();\n    };\n\n    this.ctx.beginPath();\n    for (let i = 0; i < this.order.length - 1; i++) {\n      this.ctx.moveTo(this.fixedCities[this.order[i]].x, this.fixedCities[this.order[i]].y);\n      this.ctx.lineTo(this.fixedCities[this.order[i + 1]].x, this.fixedCities[this.order[i + 1]].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"#111e6c\";\n    this.ctx.stroke();\n    \n    this.ctx.beginPath();\n    for (let i = 0; i < this.bestPoints.length - 1; i++) {\n      this.ctx.moveTo(this.bestPoints[i].x, this.bestPoints[i].y);\n      this.ctx.lineTo(this.bestPoints[i + 1].x, this.bestPoints[i + 1].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"red\";\n    this.ctx.stroke();\n    \n    if (Math.floor((this.iterationNum / this.factorial(this.cities.length)) * 100) < 100) {\n      this.iterationNum += 1;\n    }\n\n    let totalDistance = this.calculateTotalDistance(this.cities);\n    if (this.shortestDistance >= totalDistance) {\n      this.shortestDistance = totalDistance;\n      this.bestPoints = this.cities;\n    }\n\n    document.getElementById(\"percentComplete\").innerHTML = `Percent Complete: ${Number(this.iterationNum / this.factorial(this.cities.length) * 100).toFixed(2)}%`;\n    document.getElementById(\"brute-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(this.shortestDistance)}`;\n    this.nextOrder();\n    debugger\n    console.log(this.order);\n  }\n\n  nextOrder() {\n    let orderedArray = this.order;\n    let largestX = Infinity;\n    let citiesArr = this.cities.slice();\n    for (let i = 0; i < orderedArray.length - 1; i++) {\n      if (orderedArray[i] < orderedArray[i + 1]) {\n        largestX = i;\n      }\n    }\n\n    let largestY = Infinity;\n    for (let j = 0; j < orderedArray.length; j++) {\n      if (orderedArray[largestX] < orderedArray[j]) {\n        largestY = j;\n      }\n    }\n\n    [orderedArray[largestX], orderedArray[largestY]] = [orderedArray[largestY], orderedArray[largestX]];\n    [citiesArr[orderedArray[largestX]], citiesArr[orderedArray[largestY]]] = [citiesArr[orderedArray[largestY]], citiesArr[orderedArray[largestX]]];\n\n    let splicedSuffix = orderedArray.splice(largestX + 1);\n    orderedArray = orderedArray.concat(splicedSuffix.reverse());\n    this.order = orderedArray;\n    this.cities = citiesArr;\n  }\n\n  factorial(num) {\n    let result = 1;\n    for (let i = 1; i <= num; i++) {\n      result *= i;\n    }\n\n    return result;\n  }\n\n}"],"sourceRoot":""}