{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/SA.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","addEventListener","ctx","document","getElementById","getContext","ctx2","ctx3","maxDimension","totalCities","cities","populationNumber","populationArray","fitness","mutationRate","crossoverRate","shortestDistanceSoFar","Infinity","bestPoints","SA","SimulatedAnnealing","createRandomPoints","createRandomCities","ctxArr","length","fillStyle","globalAlpha","fillRect","j","beginPath","arc","x","y","Math","PI","fill","closePath","popArray","num","fromArr","shuffled","shuffle","push","populate","rand_x","random","rand_y","gaDraw","clearRect","populationArr","dist","calculateTotalDistance","sum","calculateFitness","currentDistance","slice","innerHTML","floor","moveTo","lineTo","strokeStyle","stroke","checkShortestDistance","newPopulationArray","firstParent","randomPick","secondParent","mutantChild","mutate","crossover","nextGeneration","toShuffle","a","myArr","b","array","hypot","index","limit","start","child","includes","stop","clearInterval","GA","SAnn","setInterval","saSolve","this","defaultSettings","shortestDistance","startTemperature","stopTemperature","dropTemperatureProbability","swap","saDraw","arr","totalDistance","copy","cityA","cityB","swappedCities","oldRouteCost","newRouteCost","cost","exp","console","log"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import SimulatedAnnealing from './SA';\n\nwindow.addEventListener(\"DOMContentLoaded\", ()=>{\n  const canvas = document.getElementById(\"myCanvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const canvas2 = document.getElementById(\"myCanvasTwo\");\n  const ctx2 = canvas2.getContext(\"2d\");\n  \n  const canvas3 = document.getElementById(\"myCanvasThree\");\n  const ctx3 = canvas3.getContext(\"2d\");\n  \n  const maxDimension = 400;\n  \n  const totalCities = 11;\n  let cities = [];\n  \n  const populationNumber = 500;\n  let populationArray = [];\n  let fitness = [];\n  let mutationRate = .3;\n  let crossoverRate = .9;\n  \n  let shortestDistanceSoFar = Infinity;\n  let bestPoints = [];\n  \n  let SA = new SimulatedAnnealing(ctx2, cities);\n  createRandomPoints(totalCities, maxDimension, ctx, ctx2, ctx3);\n  \n  function createRandomPoints(totalCities, maxDimension, ...ctxArr) {\n    createRandomCities(totalCities);\n    \n    for (let i = 0; i < ctxArr.length; i++) {\n      ctxArr[i].fillStyle = \"black\";\n      ctxArr[i].globalAlpha = 0.2;\n      ctxArr[i].fillRect(0, 0, maxDimension, maxDimension);\n      \n      for (let j = 0; j < cities.length; j++) {\n        ctxArr[i].beginPath();\n        let radius = 3;\n        ctxArr[i].arc(cities[j].x, cities[j].y, radius, 0, 2 * Math.PI);\n        ctxArr[i].fillStyle = \"black\";\n        ctxArr[i].fill();\n        ctxArr[i].closePath();\n      };\n    }\n\n    populate(populationArray, populationNumber, cities);\n  };\n\n  function createRandomCities(totalCities) {\n    for (let i = 0; i < totalCities; i++) {\n      let rand_x = Math.random(i) * maxDimension;\n      let rand_y = Math.random(i) * maxDimension;\n      cities[i] = {\n        x: rand_x,\n        y: rand_y,\n      };\n    };\n  }\n\n\n  function populate(popArray, num, fromArr) {\n    for (let i = 0; i < num; i++) {\n      let shuffled = shuffle(fromArr);\n      popArray.push(shuffled);\n    };\n\n    return popArray;\n  };\n\n  function gaDraw() {\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    ctx.fillStyle = \"black\";\n    ctx.globalAlpha = 0.2;\n    ctx.fillRect(0, 0, maxDimension, maxDimension);\n    for (let i = 0; i < totalCities; i++) {\n      ctx.beginPath();\n      let x = cities[i].x;\n      let y = cities[i].y;\n      let radius = 3;\n      ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = \"black\";\n      ctx.fill();\n      ctx.closePath();\n    };\n    cities = shuffle(cities);\n\n    calculateFitness(populationArray);\n    checkShortestDistance(populationArray);\n    nextGeneration();\n  };\n\n  function shuffle(toShuffle) {\n    let a = toShuffle.length;\n    let myArr = toShuffle.slice();\n    while (a) {\n      let b = Math.floor(Math.random() * a--);\n      [myArr[a], myArr[b]] = [myArr[b], myArr[a]];\n    };\n    return myArr;\n  };\n\n  function checkShortestDistance(populationArr) {\n\n    // genetic algorithm\n    for (let i = 0; i < populationArr.length; i++) {\n      let currentDistance = calculateTotalDistance(populationArr[i]);\n  \n      if (shortestDistanceSoFar > currentDistance) {\n        shortestDistanceSoFar = currentDistance;\n        bestPoints = populationArr[i].slice();\n        document.getElementById(\"ga-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(shortestDistanceSoFar)}`;\n      };\n    }\n\n    \n    ctx.beginPath();\n    for (let i = 0; i < bestPoints.length - 1; i++) {\n      ctx.moveTo(bestPoints[i].x, bestPoints[i].y);\n      ctx.lineTo(bestPoints[i + 1].x, bestPoints[i + 1].y);\n      ctx.closePath();\n    };\n    ctx.strokeStyle = \"#111e6c\";\n    ctx.stroke();\n\n  };\n\n  function calculateTotalDistance(array) {\n    let sum = 0;\n    for (let i = 0; i < array.length - 1; i++) {\n      let a = array[i].x - array[i + 1].x;\n      let b = array[i].y - array[i + 1].y;\n      let distance = Math.hypot(a, b);\n      sum += distance;\n    };\n\n    return sum;\n  };\n\n  function calculateFitness(populationArr) {\n    for (let i = 0; i < populationArr.length; i++) {\n      let dist = calculateTotalDistance(populationArr[i]);\n      fitness[i] = 1 / dist;\n    };\n\n    let sum = 0;\n    for (let i = 0; i < fitness.length; i++) {\n      sum += fitness[i];\n    };\n\n    for (let i = 0; i < fitness.length; i++) {\n      fitness[i] = fitness[i] / sum;\n    };\n  };\n\n  function randomPick() {\n    let index = 0;\n    let i = Math.random();\n\n    while (i > 0) {\n      i -= fitness[index];\n\n      if (i > 0) {\n        index += 1;\n      };\n    };\n\n    return populationArray[index];\n  };\n\n  function nextGeneration() {\n    let newPopulationArray = [];\n\n    for (let i = 0; i < populationArray.length; i++) {\n      let firstParent = randomPick();\n      let secondParent = randomPick();\n      let childRoute = crossover(firstParent, secondParent, crossoverRate);\n      let mutantChild = mutate(childRoute, mutationRate);\n      newPopulationArray[i] = mutantChild;\n    };\n    populationArray = newPopulationArray;\n  };\n\n  function mutate(array, mutationRate) {\n    if (Math.random() <= mutationRate) {\n      return shuffle(array);\n    };\n\n    return array;\n  };\n\n  function crossover(firstParent, secondParent, crossoverRate) {\n    if (Math.random() <= crossoverRate) {\n\n      let limit = Math.floor(firstParent.length) + 1;\n      let start = Math.floor(Math.random() * limit);\n      let child = firstParent.slice(start, limit);\n\n      for (let i = 0; i < secondParent.length; i++) {\n        if (!child.includes(secondParent[i])) {\n          child.push(secondParent[i]);\n        };\n      };\n      return child;\n    };\n    return firstParent;\n  };\n\n\n\n  //buttons: buttons: buttons: buttons: buttons: \n\n  function start() {\n    if (!window.GA) {\n      window.GA = setInterval(gaDraw, 10);\n    };\n    if (!window.SAnn) {\n      window.SAnn = setInterval(SA.saSolve.bind(this), 10);\n    };\n  };\n\n  function stop() {\n    clearInterval(window.GA);\n    window.GA = null;\n    clearInterval(window.SAnn);\n    window.SAnn = null;\n  };\n\n  function remap() {\n    stop();\n    cities = [];\n    shortestDistanceSoFar = Infinity;\n    bestPoints = [];\n    populationArray = [];\n    ctx.clearRect(0, 0, maxDimension, maxDimension);\n    SA.defaultSettings();\n    ctx3.clearRect(0, 0, maxDimension, maxDimension);\n    createRandomPoints(totalCities, maxDimension, ctx, ctx2, ctx3);\n    SA = new SimulatedAnnealing(ctx2, cities);\n    document.getElementById(\"ga-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"sa-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n    document.getElementById(\"brute-distance\").innerHTML = \"Shortest pixel distance so far: 0\";\n  }\n\n  const play = document.getElementById(\"play\");\n  play.addEventListener(\"click\", start);\n  // const play2 = document.getElementById(\"play2\");\n  // play2.addEventListener(\"click\", start);\n  // const play3 = document.getElementById(\"play3\");\n  // play3.addEventListener(\"click\", start);\n\n  const pause = document.getElementById(\"pause\");\n  pause.addEventListener(\"click\", stop);\n\n  const reset = document.getElementById(\"reset\");\n  reset.addEventListener(\"click\", remap)\n});\n","export default class SimulatedAnnealing {\n  constructor(ctx, cities) {\n    this.ctx = ctx;\n    this.cities = cities;\n    this.shortestDistance = Infinity;\n    this.bestPoints = [];\n    this.startTemperature = .1;\n    this.stopTemperature = 0.0001;\n    this.dropTemperatureProbability = .9999;\n    this.saSolve = this.saSolve.bind(this);\n    this.calculateTotalDistance = this.calculateTotalDistance.bind(this);\n    this.swap = this.swap.bind(this);\n    this.saDraw = this.saDraw.bind(this);\n  }\n\n  defaultSettings() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.shortestDistance = Infinity;\n    this.bestPoints = [];\n    this.startTemperature = 100;\n    this.stopTemperature = 0.1;\n    this.dropTemperatureProbability = .99999;\n  }\n\n  calculateTotalDistance(arr) {\n    let totalDistance = 0;\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let a = arr[i].x - arr[i + 1].x;\n      let b = arr[i].y - arr[i + 1].y;\n      let distance = Math.hypot(a, b);\n      totalDistance += distance;\n    };\n\n    return totalDistance;\n  };\n\n  swap() {\n    let copy = this.cities.slice();\n    let limit = copy.length;\n    let cityA = Math.floor(Math.random() * limit);\n    let cityB = Math.floor(Math.random() * limit);\n    [copy[cityA], copy[cityB]] = [copy[cityB], copy[cityA]];\n    return copy;\n  }\n\n  saDraw() {\n    this.ctx.clearRect(0, 0, 400, 400);\n    this.ctx.fillStyle = \"black\";\n    this.ctx.globalAlpha = 0.2;\n    this.ctx.fillRect(0, 0, 400, 400);\n    for (let i = 0; i < this.cities.length; i++) {\n      this.ctx.beginPath();\n      let x = this.cities[i].x;\n      let y = this.cities[i].y;\n      let radius = 3;\n      this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fill();\n      this.ctx.closePath();\n    };\n\n    this.ctx.beginPath();\n    for (let i = 0; i < this.bestPoints.length - 1; i++) {\n      this.ctx.moveTo(this.bestPoints[i].x, this.bestPoints[i].y);\n      this.ctx.lineTo(this.bestPoints[i + 1].x, this.bestPoints[i + 1].y);\n      this.ctx.closePath();\n    };\n    this.ctx.strokeStyle = \"#111e6c\";\n    this.ctx.stroke();\n  }\n\n  saSolve() {\n\n    if (this.startTemperature > this.stopTemperature) {\n      let swappedCities = this.swap();\n      let oldRouteCost = this.calculateTotalDistance(this.cities);\n      let newRouteCost = this.calculateTotalDistance(swappedCities);\n      let cost = newRouteCost - oldRouteCost;\n      if (cost < 0 || (Math.random() <= Math.exp((0 - cost) / this.startTemperature))) {\n        this.cities = swappedCities;\n        this.bestPoints = swappedCities;\n        this.shortestDistance = newRouteCost;\n        document.getElementById(\"sa-distance\").innerHTML = `Shortest pixel distance so far: ${Math.floor(this.shortestDistance)}`;\n      }\n    }\n    this.startTemperature *= this.dropTemperatureProbability;\n    console.log(`temperature is ${this.startTemperature}`);\n    this.saDraw();\n  }\n\n};"],"sourceRoot":""}